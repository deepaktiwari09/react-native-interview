
// src/services/payment-gateway/BraintreeService.ts

/**
 * @file BraintreeService.ts
 * @description Service layer for handling interactions with the Braintree payment gateway.
 * Braintree (a PayPal service) offers various payment methods including cards, PayPal, Venmo, Apple Pay, Google Pay.
 * This file includes examples of common Braintree functionalities and potential interview discussion points.
 * Note: Integration often uses libraries like 'react-native-braintree-dropin-ui' or direct API calls via a backend.
 */

// --- Interview Question: How do you typically initialize Braintree in a React Native app? ---
// Discussion points: Client Token (fetched from server), authorization methods, security considerations.
const initializeBraintree = async (clientTokenProvider: () => Promise<string>): Promise<boolean> => {
  console.log('Initializing Braintree...');
  try {
    // IMPORTANT: The client token MUST be generated on your backend server using your Braintree API keys.
    // It authorizes the client SDK to communicate with Braintree for a limited time/scope.
    const clientToken = await clientTokenProvider();
    console.log('Client Token received (first 5 chars):', clientToken.substring(0, 5));

    // Actual initialization using a Braintree SDK would happen here.
    // Example using a hypothetical SDK:
    // await BraintreeSDK.initialize(clientToken);

    // --- Interview Question: Why is fetching a client token from the server crucial for security? ---
    // Discussion: Prevents exposing Braintree API keys in the client app. Tokens are short-lived and scoped.

    console.log('Braintree initialized successfully (simulation).');
    return true;
  } catch (error) {
    console.error('Error initializing Braintree:', error);
    // --- Interview Question: How would you handle failures during Braintree initialization? ---
    return false;
  }
};

// --- Interview Question: Explain the concept of a "nonce" in Braintree. ---
// Discussion points: A single-use token representing vaulted payment method information (card details, PayPal account, etc.).
// Generated by the client-side SDK (e.g., Drop-in UI, custom integration) after user interaction.
// Sent to your server to create transactions. It's secure because sensitive data doesn't hit your server directly.

// --- Interview Question: Describe how you would implement Braintree's Drop-in UI for payment collection. ---
// Discussion points: Fetching client token, presenting the Drop-in UI (e.g., using `react-native-braintree-dropin-ui`),
// handling the result (nonce, error, cancellation).
const presentBraintreeDropIn = async (clientToken: string): Promise<{ nonce: string; type: string; description: string } | null> => {
  console.log('Presenting Braintree Drop-in UI (simulation)...');
  try {
    // Example using react-native-braintree-dropin-ui
    // const result = await BraintreeDropIn.show({
    //   clientToken: clientToken,
    //   // Other options: amount, currency, Google Pay, Apple Pay config, PayPal config, Venmo config etc.
    //   // threeDSecureRequest: { ... } // For 3D Secure
    // });
    // if (result.nonce) {
    //   console.log(`Nonce received: ${result.nonce}, Type: ${result.typeLabel}, Description: ${result.description}`);
    //   return { nonce: result.nonce, type: result.typeLabel, description: result.description };
    // } else {
    //   console.log('Braintree Drop-in cancelled or failed without nonce.');
    //   return null;
    // }

    // Placeholder simulation
    const mockNonce = `fake-nonce-${Date.now()}`;
    console.log(`Mock Nonce generated: ${mockNonce}`);
    return { nonce: mockNonce, type: 'CreditCard', description: 'Visa ending in 1111' };

  } catch (error: any) {
    if (error.code === 'USER_CANCELLATION') {
      console.log('User cancelled Braintree Drop-in.');
    } else {
      console.error('Error presenting Braintree Drop-in:', error);
      // --- Interview Question: How do you handle errors from the Drop-in UI? ---
    }
    return null;
  }
};

// --- Interview Question: What happens after you receive a payment method nonce on the client? ---
// Discussion points: The nonce MUST be sent to your backend server. The server uses the nonce along with Braintree server SDKs
// to perform actions like `Transaction.sale()` (create a payment) or `Customer.create()` + `PaymentMethod.create()` (vault the payment method).
const processNonceOnServer = async (nonce: string, amount: number, currency: string): Promise<boolean> => {
  console.log(`Sending nonce ${nonce.substring(0, 15)}... to server for processing (Amount: ${amount} ${currency})`);
  try {
    // IMPORTANT: This interaction happens between your app and YOUR backend.
    // Your backend then uses the Braintree Server SDK.
    // const response = await fetch('/api/braintree/checkout', {
    //   method: 'POST',
    //   headers: { 'Content-Type': 'application/json' },
    //   body: JSON.stringify({ paymentMethodNonce: nonce, amount, currency }),
    // });
    // const data = await response.json();
    // if (!response.ok || !data.success) {
    //   throw new Error(data.error || 'Server failed to process Braintree transaction');
    // }
    // console.log('Server successfully processed transaction:', data.transactionId);
    // return true;

    // Placeholder simulation
    console.log('Server processed nonce successfully (simulation). Transaction ID:', `txn_${Date.now()}`);
    return true;
  } catch (error) {
    console.error('Error processing nonce on server:', error);
    // --- Interview Question: How should the client handle transaction failures reported by the server? ---
    // Discussion: Inform user, potentially allow retry, log error details.
    return false;
  }
};

// --- Interview Question: How would you implement PayPal payments through Braintree? ---
// Discussion points: Enabling PayPal in Braintree dashboard, configuring PayPal flow (checkout vs vault) in Drop-in or custom integration,
// handling the PayPal nonce similarly to card nonces. Braintree SDKs often handle the PayPal popup/redirect flow.

// --- Interview Question: How would you implement Google Pay / Apple Pay through Braintree? ---
// Discussion points: Enabling in Braintree dashboard, platform-specific setup (merchant IDs, capabilities), configuring in Drop-in or using dedicated Braintree SDK modules (e.g., BraintreeApplePay, BraintreeGooglePay), handling the resulting nonce.

// --- Interview Question: What is Braintree Vault and why would you use it? ---
// Discussion points: Securely storing customer payment methods on Braintree servers (PCI compliance).
// Allows charging customers later without them re-entering details (subscriptions, repeat purchases).
// Involves creating a Customer on Braintree (via server SDK) and associating payment method nonces with that customer.

// --- Interview Question: How does 3D Secure work with Braintree? ---
// Discussion points: SCA requirement, Braintree SDKs (client and server) coordinate the challenge flow,
// involves verifying the transaction with the cardholder's bank, requires passing 3DS parameters during nonce generation and transaction creation.

// --- Interview Question: How are webhooks used with Braintree? ---
// Discussion points: Server-to-server notifications for events like transaction settled/disbursed, disputes opened/won/lost, subscription charged/canceled.
// Essential for backend logic, analytics, dispute management. Requires setting up an endpoint and verifying notifications.

export const BraintreeService = {
  initializeBraintree,
  presentBraintreeDropIn,
  processNonceOnServer, // Note: This function simulates the client-to-server call
  // Other functions would be needed for specific flows like PayPal, Google/Apple Pay, Vaulting, 3DS, Webhooks (backend)
};

// --- General Interview Questions ---
// - Compare Braintree with Stripe or other payment gateways. (Features, pricing, ease of integration, supported methods).
// - How do you handle different environments (sandbox, production) with Braintree? (API keys, client token generation).
// - Explain Braintree's approach to fraud protection tools.
// - How would you test your Braintree integration? (Sandbox accounts, test nonces, testing specific scenarios like declines or 3DS).
